{
  "version": 3,
  "sources": ["../keystone.ts", "../src/schema/User.ts", "../src/schema/Product.ts", "../src/schema/Image.ts", "../src/schema.ts", "../auth.ts", "../lib/mail.ts"],
  "sourcesContent": ["import \"dotenv/config\";\nimport { config } from \"@keystone-6/core\";\n\nimport { lists } from \"./src/schema\";\n\nimport { withAuth, session } from \"./auth\";\n\nconst databaseURL = process.env.DATABASE_URL || \"mongodb://localhost/shopee\";\n\nexport default withAuth(\n  config({\n    server: {\n      cors: {\n        origin: [process.env.CLIENT_URL],\n        credentials: true,\n      },\n    },\n    db: {\n      provider: \"postgresql\",\n      url: databaseURL,\n    },\n    lists,\n    ui: {\n      /* Everyone who is signed in can access the Admin UI */\n      isAccessAllowed: ({ session }) => {\n        console.log(session);\n        return !!session;\n      },\n    },\n    session,\n  })\n);\n", "import { list } from \"@keystone-6/core\";\nimport { allowAll } from \"@keystone-6/core/access\";\nimport {\n  password,\n  text,\n  relationship,\n  timestamp,\n} from \"@keystone-6/core/fields\";\n\nexport const User = list({\n  access: allowAll,\n\n  fields: {\n    name: text({ validation: { isRequired: true } }),\n\n    email: text({\n      validation: { isRequired: true },\n      isIndexed: \"unique\",\n    }),\n\n    password: password({ validation: { isRequired: true } }),\n    //posts: relationship({ ref: 'Post.author', many: true }),\n\n    createdAt: timestamp({\n      defaultValue: { kind: \"now\" },\n    }),\n  },\n});\n", "import { list } from \"@keystone-6/core\";\nimport { allowAll } from \"@keystone-6/core/access\";\nimport { integer, relationship, select, text } from \"@keystone-6/core/fields\";\n\nexport const Product = list({\n  access: allowAll,\n  fields: {\n    name: text({ validation: { isRequired: true } }),\n    description: text({\n      ui: {\n        displayMode: \"textarea\",\n      },\n    }),\n    status: select({\n      options: [\n        { label: \"Draft\", value: \"draft\" },\n        { label: \"Available\", value: \"available\" },\n        { label: \"Unavailable\", value: \"unavailable\" },\n      ],\n      defaultValue: \"draft\",\n      ui: {\n        displayMode: \"segmented-control\",\n      },\n    }),\n    image: relationship({\n      ref: \"Image.product\",\n      ui: {\n        displayMode: \"cards\",\n        cardFields: [\"image\", \"altText\"],\n        inlineCreate: { fields: [\"image\", \"altText\", \"name\"] },\n        inlineEdit: { fields: [\"image\", \"altText\"] },\n      },\n    }),\n    price: integer(),\n  },\n});\n", "import { cloudinaryImage } from \"@keystone-6/cloudinary\";\nimport { list } from \"@keystone-6/core\";\nimport { allowAll } from \"@keystone-6/core/access\";\nimport { relationship, text } from \"@keystone-6/core/fields\";\n\nexport const cloudinary = {\n  cloudName: process.env.CLOUDINARY_NAME || \"\",\n  apiKey: process.env.CLOUDINARY_API_KEY || \"\",\n  apiSecret: process.env.CLOUDINARY_API_SECRET || \"\",\n  folder: \"shopee\",\n};\n\nexport const Image = list({\n  access: allowAll,\n  fields: {\n    name: text({ validation: { isRequired: true } }),\n    image: cloudinaryImage({\n      cloudinary,\n    }),\n    altText: text(),\n    product: relationship({\n      ref: \"Product.image\",\n    }),\n  },\n});\n", "// Welcome to your schema\n//   Schema driven development is Keystone's modus operandi\n//\n// This file is where we define the lists, fields and hooks for our data.\n// If you want to learn more about how lists are configured, please read\nimport { User } from \"./schema/User\";\nimport { Product } from \"./schema/Product\";\nimport { Image } from \"./schema/Image\";\n\nexport const lists = {\n  User,\n  Product,\n  Image,\n};\n", "// Welcome to some authentication for Keystone\n//\n// This is using @keystone-6/auth to add the following\n// - A sign-in page for your Admin UI\n// - A cookie-based stateless session strategy\n//    - Using a User email as the identifier\n//    - 30 day cookie expiration\n//\n// This file does not configure what Users can do, and the default for this starter\n// project is to allow anyone - logged-in or not - to do anything.\n//\n// If you want to prevent random people on the internet from accessing your data,\n// you can find out how by reading https://keystonejs.com/docs/guides/auth-and-access-control\n//\n// If you want to learn more about how our out-of-the-box authentication works, please\n// read https://keystonejs.com/docs/apis/auth#authentication-api\n\nimport { randomBytes } from \"crypto\";\nimport { createAuth } from \"@keystone-6/auth\";\n\n// see https://keystonejs.com/docs/apis/session for the session docs\nimport { statelessSessions } from \"@keystone-6/core/session\";\nimport { sendPasswordResetEmail } from \"./lib/mail\";\n\n// for a stateless session, a SESSION_SECRET should always be provided\n//   especially in production (statelessSessions will throw if SESSION_SECRET is undefined)\nlet sessionSecret = process.env.SESSION_SECRET;\nif (!sessionSecret && process.env.NODE_ENV !== \"production\") {\n  sessionSecret = randomBytes(32).toString(\"hex\");\n}\n\n// withAuth is a function we can use to wrap our base configuration\nconst { withAuth } = createAuth({\n  listKey: \"User\",\n  identityField: \"email\",\n\n  sessionData: \"name createdAt\",\n  secretField: \"password\",\n\n  initFirstItem: {\n    fields: [\"name\", \"email\", \"password\"],\n  },\n  passwordResetLink: {\n    async sendToken({ identity, token }) {\n      await sendPasswordResetEmail(token, identity);\n    },\n  },\n});\n\n// statelessSessions uses cookies for session tracking\n//   these cookies have an expiry, in seconds\n//   we use an expiry of 30 days for this starter\nconst sessionMaxAge = 60 * 60 * 24 * 30;\n\n// you can find out more at https://keystonejs.com/docs/apis/session#session-api\nconst session = statelessSessions({\n  maxAge: sessionMaxAge,\n  secret: sessionSecret!,\n});\n\nexport { withAuth, session };\n", "import { createTransport } from \"nodemailer\";\nconst transporter = createTransport({\n  host: process.env.MAIL_HOST,\n  port: 587,\n  auth: {\n    user: process.env.MAIL_USERNAME,\n    pass: process.env.MAIL_PASSWORD,\n  },\n});\n\nexport const emailTemplate = (text: string) => {\n  return `\n        <div style=\"\n        border:1px solid black\n        padding:20px\n        font-family:sans-serif \n        \">\n        <h2> Hello There!!</h2>\n        <p>${text}</p>\n        </div>\n        `;\n};\n\nexport const sendPasswordResetEmail = async (token: string, to: string) => {\n  // Email User the Token\n  const emailData = await transporter.sendMail({\n    to: to,\n    from: \"admin@shopee.com\",\n    subject: \"Password Rest Token\",\n    html: emailTemplate(`Password Reset Token is here!\n    <a href=\"${process.env.CLIENT_URL}/reset?token=${token}\">Click here to Reset</a>`),\n  });\n  console.log(emailData);\n};\n"],
  "mappings": "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",
  "names": ["import_core", "import_core", "import_access", "import_fields", "import_core", "import_access", "import_fields", "text", "session"]
}
